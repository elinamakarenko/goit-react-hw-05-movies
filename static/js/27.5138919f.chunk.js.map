{"version":3,"file":"static/js/27.5138919f.chunk.js","mappings":"yNAWA,MARA,SAA0BA,EAAOC,GAC/B,OAAOC,MAAM,GAAD,OAHF,iCAGE,OAAUF,EAAV,qBAJF,mCAIE,kBAAyCC,IAASE,MAC5D,SAAAC,GACE,OAAOA,EAASC,MACjB,GAEJ,ECRD,GAAgB,WAAa,8BAA8B,gBAAkB,oC,SCG9D,SAASC,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAClC,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOR,EAAP,KAAcS,EAAd,KAiBMC,EAAQ,WACZD,EAAS,GACV,EAED,OACE,kBAAME,UAAWC,EAAAA,WAAcL,SAfZ,SAAAM,GACnBA,EAAMC,iBACe,KAAjBd,EAAMe,QAIVR,EAASP,GACTU,KAJEM,MAAM,6BAKT,EAOC,WACE,kBACEL,UAAWC,EAAAA,gBACXZ,MAAOA,EACPiB,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,SA5Be,SAAAR,GACnB,IAAQb,EAAUa,EAAMS,OAAhBtB,MACRS,EAAST,EACV,KA2BG,mBAAQW,UAAWC,EAAAA,iBAAoBK,KAAK,SAA5C,sBAKL,C,aCpCc,SAASM,IAAU,IAAD,EACzBC,GAAWC,EAAAA,EAAAA,MACjB,GAA4BjB,EAAAA,EAAAA,UAAS,IAArC,eAAOkB,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACM7B,EAAK,UAAG4B,EAAaE,IAAI,gBAApB,QAAgC,IAE3CC,EAAAA,EAAAA,YAAU,WACM,KAAV/B,GAGJgC,EAAiB,eAAgBhC,GAC9BE,MAAK,SAAAC,GACCA,GAGLuB,EAAUvB,EAAS8B,QACpB,IACAC,OAAM,SAAAC,GACLpB,MAAMoB,EAAMC,QACb,GACJ,GAAE,CAACpC,IAIJ,OACE,iCACE,SAACK,EAAD,CAAWC,SALI,SAAA+B,GACjBR,EAAgC,KAAhBQ,EAAqB,CAAErC,MAAOqC,GAAgB,CAAC,EAChE,IAIIrC,IACC,SAACsC,EAAA,EAAD,CAAWC,KAAK,GAAGd,OAAQA,EAAQe,MAAO,CAAEC,KAAMlB,OAIzD,C","sources":["services/fetchSearchMovie.js","webpack://react-homework-template/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.js","pages/Movies/Movies.js"],"sourcesContent":["const KEY = '92ce6d7899f831323ae614f8261684f2';\nconst URL = 'https://api.themoviedb.org/3/';\n\nfunction fetchSearchMovie(value, query) {\n  return fetch(`${URL}${value}?&api_key=${KEY}&query=${query}`).then(\n    response => {\n      return response.json();\n    }\n  );\n}\n\nexport default fetchSearchMovie;\n","// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"SearchBar_searchForm__V6XO6\",\"searchFormInput\":\"SearchBar_searchFormInput__9ldTo\"};","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport s from './SearchBar.module.css';\n\nexport default function SearchBar({ onSubmit }) {\n  const [value, setValue] = useState('');\n\n  const handleChange = event => {\n    const { value } = event.target;\n    setValue(value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (value.trim() === '') {\n      alert('Please, enter movie title!');\n      return;\n    }\n    onSubmit(value);\n    reset();\n  };\n\n  const reset = () => {\n    setValue('');\n  };\n\n  return (\n    <form className={s.searchForm} onSubmit={handleSubmit}>\n      <input\n        className={s.searchFormInput}\n        value={value}\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n        onChange={handleChange}\n      />\n      <button className={s.searchFormButton} type=\"submit\">\n        Search\n      </button>\n    </form>\n  );\n}\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import { useEffect, useState } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport fetchSearchMovie from 'services/fetchSearchMovie';\nimport SearchBar from 'components/SearchBar';\nimport MovieList from 'components/MovieList';\n\nexport default function Movies() {\n  const location = useLocation();\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n    fetchSearchMovie('search/movie', query)\n      .then(response => {\n        if (!response) {\n          return;\n        }\n        setMovies(response.results);\n      })\n      .catch(error => {\n        alert(error.message);\n      });\n  }, [query]);\n  const formSubmit = searchValue => {\n    setSearchParams(searchValue !== '' ? { query: searchValue } : {});\n  };\n  return (\n    <>\n      <SearchBar onSubmit={formSubmit} />\n      {query && (\n        <MovieList path=\"\" movies={movies} state={{ from: location }} />\n      )}\n    </>\n  );\n}\n"],"names":["value","query","fetch","then","response","json","SearchBar","onSubmit","useState","setValue","reset","className","s","event","preventDefault","trim","alert","type","autoComplete","autoFocus","placeholder","onChange","target","Movies","location","useLocation","movies","setMovies","useSearchParams","searchParams","setSearchParams","get","useEffect","fetchSearchMovie","results","catch","error","message","searchValue","MovieList","path","state","from"],"sourceRoot":""}