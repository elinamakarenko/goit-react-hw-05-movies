{"version":3,"file":"static/js/767.500f2158.chunk.js","mappings":"oOACA,EAAyB,6BAAzB,EAA4D,0BAA5D,EAAqG,mCAArG,EAAqJ,iCCArJ,EAA6B,+BAA7B,EAAsE,4BAAtE,EAAkH,kC,SCCnG,SAASA,IAAc,IAAD,IAC7BC,GAAWC,EAAAA,EAAAA,MACjB,OACE,gCACG,KACD,iBAAKC,UAAWC,EAAhB,WACE,SAAC,KAAD,CAEEC,MAAO,CAAEC,KAAI,OAAEL,QAAF,IAAEA,GAAF,UAAEA,EAAUI,aAAZ,aAAE,EAAiBC,MAChCH,UAAW,gBAAGI,EAAH,EAAGA,SAAH,MACT,UAACA,EAA+BH,EAAjBA,EADN,EAGXI,GAAG,OANL,iBACO,SASP,SAAC,KAAD,CAEEH,MAAO,CAAEC,KAAI,OAAEL,QAAF,IAAEA,GAAF,UAAEA,EAAUI,aAAZ,aAAE,EAAiBC,MAChCH,UAAW,gBAAGI,EAAH,EAAGA,SAAH,MACT,UAACA,EAA+BH,EAAjBA,EADN,EAGXI,GAAG,UANL,oBACO,gBAYd,CCzBc,SAASC,IAAgB,IAAD,IAC7BC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAY,qBADDb,EAAAA,EAAAA,MACaG,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,KAC7CU,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,GAAgB,SAAD,OAAUP,IACtBQ,MAAK,SAAAC,GACCA,GAGLL,EAASK,EACV,IACAC,OAAM,SAAAC,GACLC,MAAMD,EAAME,QACb,GACJ,IASD,OACE,iCACE,4BACG,KACD,mBAAQC,KAAK,SAASrB,UAAWC,EAAjC,UACE,SAAC,KAAD,CAAMI,GAAIO,EAAiCZ,UAAWC,EAAtD,oBAA6BW,KAGrB,KACV,iBAAKZ,UAAWC,EAAhB,WACE,gBACED,UAAWC,EACXqB,IAAG,yCAAoCZ,EAAMa,aAC7CC,IAAKd,EAAMe,SAEb,2BACG,KACD,wBAAKf,EAAMe,SACX,wCAAgBf,EAAMgB,iBACtB,sCACA,uBAAIhB,EAAMiB,YACV,mCACCjB,EAAMkB,QAAS,uBA5BnBlB,EAAMkB,OAGJlB,EAAMkB,OAAOC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAAc,oCAAqBA,EAArB,MAAWA,EAAzB,IAFf,QA2BmC,qDAI1C,SAACjC,EAAD,KACA,SAAC,KAAD,MAGL,C","sources":["webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","webpack://react-homework-template/./src/components/AddInfoBar/AddInfoBar.module.css?abf3","components/AddInfoBar/AddInfoBar.js","pages/MovieDetails/MovieDetails.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"MovieDetails_button__uXZxd\",\"img\":\"MovieDetails_img__uOAom\",\"movieDetails\":\"MovieDetails_movieDetails__EbgQo\",\"linkButton\":\"MovieDetails_linkButton__3lnm8\"};","// extracted by mini-css-extract-plugin\nexport default {\"addInfoBar\":\"AddInfoBar_addInfoBar__c+yPS\",\"navLink\":\"AddInfoBar_navLink__sl9HB\",\"activeNavLink\":\"AddInfoBar_activeNavLink__SOaM+\"};","import { NavLink, useLocation } from 'react-router-dom';\nimport s from './AddInfoBar.module.css';\nexport default function AddInfoBar() {\n  const location = useLocation();\n  return (\n    <>\n      {' '}\n      <nav className={s.addInfoBar}>\n        <NavLink\n          key={'cast'}\n          state={{ from: location?.state?.from }}\n          className={({ isActive }) =>\n            !isActive ? `${s.navLink}` : `${s.activeNavLink}`\n          }\n          to=\"cast\"\n        >\n          Cast\n        </NavLink>\n        <NavLink\n          key={'reviews'}\n          state={{ from: location?.state?.from }}\n          className={({ isActive }) =>\n            !isActive ? `${s.navLink}` : `${s.activeNavLink}`\n          }\n          to=\"reviews\"\n        >\n          Reviews\n        </NavLink>\n      </nav>\n    </>\n  );\n}\n","import { useParams, useLocation, Link, Outlet } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport fetchTheMoviedb from 'services/fetchTheMoviedb';\nimport s from './MovieDetails.module.css';\nimport AddInfoBar from 'components/AddInfoBar';\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState([]);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n  useEffect(() => {\n    fetchTheMoviedb(`movie/${movieId}`)\n      .then(response => {\n        if (!response) {\n          return;\n        }\n        setMovie(response);\n      })\n      .catch(error => {\n        alert(error.message);\n      });\n  });\n\n  const genres = () => {\n    if (!movie.genres) {\n      return null;\n    }\n    return movie.genres.map(({ name }) => <span key={name}>{`${name} `}</span>);\n  };\n\n  return (\n    <>\n      <main>\n        {' '}\n        <button type=\"button\" className={s.button}>\n          <Link to={backLinkHref} key={backLinkHref} className={s.linkButton}>\n            Go back\n          </Link>\n        </button>{' '}\n        <div className={s.movieDetails}>\n          <img\n            className={s.img}\n            src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`}\n            alt={movie.title}\n          ></img>\n          <div>\n            {' '}\n            <h2>{movie.title}</h2>\n            <p>User Score: {movie.vote_average}</p>\n            <h3>Overview</h3>\n            <p>{movie.overview}</p>\n            <h3>Genres</h3>\n            {movie.genres ? <p>{genres()}</p> : <p>No information!</p>}\n          </div>\n        </div>\n      </main>\n      <AddInfoBar />\n      <Outlet />\n    </>\n  );\n}\n"],"names":["AddInfoBar","location","useLocation","className","s","state","from","isActive","to","MovieDetails","movieId","useParams","useState","movie","setMovie","backLinkHref","useEffect","fetchTheMoviedb","then","response","catch","error","alert","message","type","src","poster_path","alt","title","vote_average","overview","genres","map","name"],"sourceRoot":""}